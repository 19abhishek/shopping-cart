{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek_0819/Documents/Development/Shopping-Cart-React/shopping-cart/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  items: [],\n  totalPrice: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const itemIndex = state.items.findIndex(item => item.id === action.item.id);\n    let updatedItems;\n    const currItem = state.items[itemIndex];\n\n    if (currItem) {\n      const updatedItem = { ...currItem,\n        qty: currItem.qty++\n      };\n      updatedItems = [...state.items];\n      updatedItems[itemIndex] = updatedItem;\n    } else {\n      updatedItems = [...state.items, { ...action.item,\n        qty: 1\n      }];\n    }\n\n    const updatedPrice = state.totalPrice + action.item.price;\n    return {\n      items: updatedItems,\n      totalPrice: updatedPrice\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const itemIndex = state.items.findIndex(item => item.id === action.id);\n    let updatedItems;\n    const currItem = state.items[itemIndex];\n\n    if (currItem.qty === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...currItem,\n        qty: currItem.qty--\n      };\n      updatedItems = [...state.items];\n      updatedItems[itemIndex] = updatedItem;\n    }\n\n    const updatedPrice = state.totalPrice - currItem.price;\n    return {\n      items: updatedItems,\n      totalPrice: updatedPrice\n    };\n  }\n\n  return initialState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, initialState);\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalPrice,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"5tETRhEDe87IOhxlpUpB38FwUVQ=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/abhishek_0819/Documents/Development/Shopping-Cart-React/shopping-cart/src/store/CartProvider.js"],"names":["useReducer","CartContext","initialState","items","totalPrice","cartReducer","state","action","type","itemIndex","findIndex","item","id","updatedItems","currItem","updatedItem","qty","updatedPrice","price","filter","CartProvider","props","cartState","dispatchCartAction","addItemHandler","removeItemHandler","cartContext","totalAmount","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\n\nimport CartContext from \"./cart-context\";\n\nconst initialState = {\n  items: [],\n  totalPrice: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const itemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    let updatedItems;\n    const currItem = state.items[itemIndex];\n\n    if (currItem) {\n      const updatedItem = {\n        ...currItem,\n        qty: currItem.qty++,\n      };\n      updatedItems = [...state.items];\n      updatedItems[itemIndex] = updatedItem;\n    } else {\n      updatedItems = [...state.items, { ...action.item, qty: 1 }];\n    }\n    const updatedPrice = state.totalPrice + action.item.price;\n    return {\n      items: updatedItems,\n      totalPrice: updatedPrice,\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    const itemIndex = state.items.findIndex((item) => item.id === action.id);\n    let updatedItems;\n    const currItem = state.items[itemIndex];\n    if (currItem.qty === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.id);\n    } else {\n      const updatedItem = { ...currItem, qty: currItem.qty-- };\n      updatedItems = [...state.items];\n      updatedItems[itemIndex] = updatedItem;\n    }\n    const updatedPrice = state.totalPrice - currItem.price;\n    return {\n      items: updatedItems,\n      totalPrice: updatedPrice,\n    };\n  }\n\n  return initialState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, initialState);\n\n  const addItemHandler = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n\n  const removeItemHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalPrice,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}